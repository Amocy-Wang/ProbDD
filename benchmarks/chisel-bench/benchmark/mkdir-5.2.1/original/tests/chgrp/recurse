#!/bin/sh
# ad-hoc tests of chgrp with -R and -H or -L and symlinks

if test "$VERBOSE" = yes; then
  set -x
  chgrp --version
fi

. $srcdir/../group-names

pwd=`pwd`
tmp=recurse.$$
trap 'status=$?; cd $pwd; rm -rf $tmp && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework' 1>&2
  (exit 1); exit
fi

set _ $groups; shift
g1=$1
g2=$2

fail=0

# chgrp -R should not traverse a symlink to a directory.
mkdir d e
touch d/dd e/ee
ln -s ../e d/s
chgrp -R $g1 e/ee || fail=1
# This should not should change the group of e/ee
chgrp -R $g2 d
set _ `ls -l e/ee`; g=$5; test "$g" = $g1 || fail=1
# This must change the group of e/ee, since -L makes
# chgrp traverse the symlink from d/s into e.
chgrp -L -R $g2 d
set _ `ls -l e/ee`; g=$5; test "$g" = $g2 || fail=1

# This must *not* change the group of e/ee
chgrp -H -R $g1 d
set _ `ls -l e/ee`; g=$5; test "$g" = $g2 || fail=1

ln -s d link

# This shouldn't change the group of e/ee either.
chgrp -H -R $g1 link || fail=1
set _ `ls -l e/ee`; g=$5; test "$g" = $g2 || fail=1
# But it *should* change d/dd.
set _ `ls -l d/dd`; g=$5; test "$g" = $g1 || fail=1

(exit $fail); exit
