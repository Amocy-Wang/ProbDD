#!/bin/sh
# For unwritable directory `d', `rmdir -p d d/e/f' would emit
# diagnostics but would not fail.  Fixed in 5.1.2.

if test "$VERBOSE" = yes; then
  set -x
  rmdir --version
fi

PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir d d/e d/e/f || framework_failure=1
chmod a-w d || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

# This rmdir command outputs two diagnostics.
# Before coreutils-5.1.2, it would mistakenly exit successfully.
# As of coreutils-5.1.2, it fails, as required.
rmdir -p d d/e/f 2> /dev/null && fail=1

(exit $fail); exit $fail
