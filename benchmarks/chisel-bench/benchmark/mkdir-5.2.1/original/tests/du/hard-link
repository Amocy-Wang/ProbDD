#!/bin/sh
# Ensure that hard-linked files are counted (and listed) only once.
# Likewise for excluded directories.
# Ensure that hard links _are_ listed twice when using --count-links.

if test "$VERBOSE" = yes; then
  set -x
  du --version
fi

. $srcdir/../envvar-check
. $srcdir/../lang-default

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

mkdir -p dir/sub
( cd dir && { echo non-empty > f1; ln f1 f2; echo non-empty > sub/F; } )

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

# Note that for this first test, we transform f1 or f2
# (whichever name we find first) to f_.  That is necessary because,
# depending on the type of file system, du could encounter either of those
# two hard-linked files first, thus listing that one and not the other.
du -a --exclude=sub dir \
  | sed 's/^[0-9][0-9]*	//' | sed 's/f[12]/f_/' > out || fail=1
echo === >> out
du -a --exclude=sub --count-links dir \
  | sed 's/^[0-9][0-9]*	//' | sort -r >> out || fail=1
cat <<\EOF > exp
dir/f_
dir
===
dir/f2
dir/f1
dir
EOF

cmp out exp || fail=1
test $fail = 1 && diff -u out exp 2> /dev/null

(exit $fail); exit $fail
